CREATE TABLE activity_data (id INT AUTO_INCREMENT, member_id INT NOT NULL, in_reply_to_activity_id INT, body VARCHAR(140) NOT NULL, uri TEXT, public_flag TINYINT DEFAULT '1' NOT NULL, is_pc TINYINT DEFAULT '1' NOT NULL, is_mobile TINYINT DEFAULT '1' NOT NULL, source VARCHAR(64), source_uri TEXT, foreign_table TEXT, foreign_id BIGINT, template VARCHAR(64), template_param TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE activity_image (id INT AUTO_INCREMENT, activity_data_id INT NOT NULL, mime_type VARCHAR(64) NOT NULL, uri TEXT, file_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX activity_data_id_idx (activity_data_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE admin_user (id INT AUTO_INCREMENT, username VARCHAR(64) DEFAULT '' NOT NULL, password VARCHAR(40) DEFAULT '' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE album (id INT AUTO_INCREMENT, member_id INT, title TEXT NOT NULL, body TEXT NOT NULL, public_flag TINYINT DEFAULT '1' NOT NULL, file_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE album_image (id INT AUTO_INCREMENT, album_id INT NOT NULL, member_id INT NOT NULL, file_id INT, description TEXT, filesize BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX album_id_idx (album_id), INDEX file_id_idx (file_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE application_translation (id BIGINT, title VARCHAR(128), title_url VARCHAR(128), description TEXT, directory_title VARCHAR(128), screenshot VARCHAR(128), thumbnail VARCHAR(128), author VARCHAR(128), author_aboutme TEXT, author_affiliation VARCHAR(128), author_email VARCHAR(128), author_photo VARCHAR(128), author_link VARCHAR(128), author_quote TEXT, settings TEXT, views TEXT, lang CHAR(5), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE application (member_id INT, url VARCHAR(128) NOT NULL, height BIGINT, scrolling TINYINT DEFAULT '0' NOT NULL, singleton TINYINT DEFAULT '1' NOT NULL, is_active TINYINT DEFAULT '1' NOT NULL, is_pc TINYINT DEFAULT '1' NOT NULL, is_mobile TINYINT DEFAULT '0' NOT NULL, links TEXT, consumer_key VARCHAR(16) DEFAULT '' NOT NULL, consumer_secret VARCHAR(32) DEFAULT '' NOT NULL, title VARCHAR(128), title_url VARCHAR(128), description TEXT, directory_title VARCHAR(128), screenshot VARCHAR(128), thumbnail VARCHAR(128), author VARCHAR(128), author_aboutme TEXT, author_affiliation VARCHAR(128), author_email VARCHAR(128), author_photo VARCHAR(128), author_link VARCHAR(128), author_quote TEXT, settings LONGTEXT, views LONGTEXT, id BIGINT AUTO_INCREMENT, INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE application_invite (application_id BIGINT NOT NULL, to_member_id INT NOT NULL, from_member_id INT NOT NULL, id BIGINT AUTO_INCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX application_id_idx (application_id), INDEX to_member_id_idx (to_member_id), INDEX from_member_id_idx (from_member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE application_lifecycle_event_queue (application_id BIGINT NOT NULL, member_id INT, name VARCHAR(128) NOT NULL, params TEXT, id BIGINT AUTO_INCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX application_id_idx (application_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE application_persistent_data (application_id BIGINT NOT NULL, member_id INT NOT NULL, name VARCHAR(128) NOT NULL, value TEXT, id BIGINT AUTO_INCREMENT, UNIQUE INDEX name_UNIQUE_idx (application_id, member_id, name), INDEX application_id_idx (application_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE ashiato (id INT AUTO_INCREMENT, member_id_from INT, member_id_to INT, r_date DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_at_idx (created_at), INDEX member_id_to_member_id_from_updated_at_idx (member_id_to, member_id_from, updated_at), INDEX member_id_to_r_date_idx (member_id_to, r_date), INDEX member_id_from_idx (member_id_from), INDEX member_id_to_idx (member_id_to), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE banner (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, html TEXT, is_use_html TINYINT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE banner_image (id INT AUTO_INCREMENT, file_id INT NOT NULL, url TEXT, name VARCHAR(64), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX file_id_idx (file_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE banner_translation (id INT, caption TEXT NOT NULL, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE banner_use_image (id INT AUTO_INCREMENT, banner_id INT NOT NULL, banner_image_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX banner_id_idx (banner_id), INDEX banner_image_id_idx (banner_image_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blacklist (id INT AUTO_INCREMENT, uid VARCHAR(32) DEFAULT '' NOT NULL, memo TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_rss_cache (id INT AUTO_INCREMENT, member_id INT, title TEXT, description TEXT, link TEXT, date DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX date_INDEX_idx (date), INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE community (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, file_id INT, community_category_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX community_category_id_idx (community_category_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_category (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, is_allow_member_community TINYINT DEFAULT '1' NOT NULL, tree_key INT, sort_order INT, lft INT, rgt INT, level SMALLINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_config (id INT AUTO_INCREMENT, community_id INT NOT NULL, name VARCHAR(64) DEFAULT '' NOT NULL, value TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX community_id_idx (community_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_event_image (id INT AUTO_INCREMENT, post_id INT NOT NULL, file_id INT, number INT NOT NULL, INDEX file_id_idx (file_id), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_event (id INT AUTO_INCREMENT, community_id INT NOT NULL, member_id INT, name TEXT NOT NULL, body TEXT NOT NULL, event_updated_at DATETIME, open_date DATETIME NOT NULL, open_date_comment TEXT NOT NULL, area TEXT NOT NULL, application_deadline DATETIME, capacity INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX community_id_idx (community_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE community_event_comment_image (id INT AUTO_INCREMENT, post_id INT NOT NULL, file_id INT, number INT NOT NULL, INDEX file_id_idx (file_id), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_event_comment (id INT AUTO_INCREMENT, community_event_id INT NOT NULL, member_id INT, number INT DEFAULT '0' NOT NULL, body TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX community_event_id_idx (community_event_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE community_event_member (id INT AUTO_INCREMENT, community_event_id INT NOT NULL, member_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX community_event_id_idx (community_event_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE community_member (id INT AUTO_INCREMENT, community_id INT NOT NULL, member_id INT NOT NULL, is_pre TINYINT DEFAULT '0' NOT NULL, is_receive_mail_pc TINYINT DEFAULT '0' NOT NULL, is_receive_mail_mobile TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX community_id_idx (community_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_member_position (id INT AUTO_INCREMENT, community_id INT NOT NULL, member_id INT NOT NULL, community_member_id INT NOT NULL, name VARCHAR(32) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX community_member_id_idx (community_member_id), INDEX community_id_idx (community_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_topic_image (id INT AUTO_INCREMENT, post_id INT NOT NULL, file_id INT, number INT NOT NULL, INDEX file_id_idx (file_id), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_topic (id INT AUTO_INCREMENT, community_id INT NOT NULL, member_id INT, name TEXT NOT NULL, body TEXT NOT NULL, topic_updated_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX community_id_idx (community_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE community_topic_comment_image (id INT AUTO_INCREMENT, post_id INT NOT NULL, file_id INT, number INT NOT NULL, INDEX file_id_idx (file_id), INDEX post_id_idx (post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE community_topic_comment (id INT AUTO_INCREMENT, community_topic_id INT NOT NULL, member_id INT, number INT DEFAULT '0' NOT NULL, body TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX community_topic_id_idx (community_topic_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE deleted_message (id INT AUTO_INCREMENT, member_id INT, message_id INT NOT NULL, message_send_list_id INT NOT NULL, is_deleted TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE diary (id INT AUTO_INCREMENT, member_id INT NOT NULL, title TEXT NOT NULL, body TEXT NOT NULL, public_flag TINYINT DEFAULT '1' NOT NULL, is_open TINYINT DEFAULT '0' NOT NULL, has_images TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_at_idx (created_at), INDEX member_id_created_at_idx (member_id, created_at), INDEX public_flag_craeted_at_idx (public_flag, created_at), INDEX is_open_created_at_idx (is_open, created_at), INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE diary_comment (id INT AUTO_INCREMENT, diary_id INT NOT NULL, member_id INT NOT NULL, number INT NOT NULL, body TEXT NOT NULL, has_images TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX diary_id_number_idx (diary_id, number), INDEX diary_id_idx (diary_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE diary_comment_image (id INT AUTO_INCREMENT, diary_comment_id INT NOT NULL, file_id INT NOT NULL, INDEX diary_comment_id_idx (diary_comment_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE diary_comment_unread (diary_id INT, member_id INT NOT NULL, INDEX member_id_idx (member_id), PRIMARY KEY(diary_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE diary_comment_update (diary_id INT, member_id INT, last_comment_time DATETIME NOT NULL, my_last_comment_time DATETIME NOT NULL, INDEX member_id_last_comment_time_idx (member_id, last_comment_time), PRIMARY KEY(diary_id, member_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE diary_image (id INT AUTO_INCREMENT, diary_id INT NOT NULL, file_id INT NOT NULL, number INT NOT NULL, UNIQUE INDEX diary_id_number_idx (diary_id, number), INDEX diary_id_idx (diary_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE favorite (id INT AUTO_INCREMENT, member_id_to INT NOT NULL, member_id_from INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_from_INDEX_idx (member_id_from), INDEX member_id_to_idx (member_id_to), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE file (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, type VARCHAR(64) DEFAULT '' NOT NULL, filesize INT DEFAULT '0' NOT NULL, original_filename TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE file_bin (file_id INT, bin LONGBLOB, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(file_id)) ENGINE = INNODB;
CREATE TABLE gadget (id INT AUTO_INCREMENT, type VARCHAR(64) DEFAULT '' NOT NULL, name VARCHAR(64) DEFAULT '' NOT NULL, sort_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE gadget_config (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, gadget_id INT, value TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX gadget_id_idx (gadget_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE intro_friend (id INT AUTO_INCREMENT, member_id_to INT NOT NULL, member_id_from INT NOT NULL, content TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_at_idx (created_at), INDEX member_id_from_member_id_to_idx (member_id_from, member_id_to), INDEX member_id_from_idx (member_id_from), INDEX member_id_to_idx (member_id_to), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE member (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, invite_member_id INT, is_login_rejected TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, is_active TINYINT DEFAULT '0' NOT NULL, rank INT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE member_application (member_id INT NOT NULL, application_id BIGINT NOT NULL, public_flag VARCHAR(255) DEFAULT 'public' NOT NULL, sort_order BIGINT, id BIGINT AUTO_INCREMENT, INDEX member_id_idx (member_id), INDEX application_id_idx (application_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE member_application_setting (member_application_id BIGINT NOT NULL, type VARCHAR(255) DEFAULT 'application' NOT NULL, name VARCHAR(255) NOT NULL, hash VARCHAR(32) NOT NULL, value TEXT, id BIGINT AUTO_INCREMENT, UNIQUE INDEX hash_UNIQUE_idx (hash), INDEX member_application_id_idx (member_application_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE member_config (id INT AUTO_INCREMENT, member_id INT NOT NULL, name VARCHAR(64) DEFAULT '' NOT NULL, value TEXT NOT NULL, value_datetime DATETIME, name_value_hash VARCHAR(32) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE member_image (id INT AUTO_INCREMENT, member_id INT NOT NULL, file_id INT NOT NULL, is_primary TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX file_id_idx (file_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE member_profile (id INT AUTO_INCREMENT, member_id INT NOT NULL, profile_id INT NOT NULL, profile_option_id INT, value TEXT NOT NULL, value_datetime DATETIME, public_flag TINYINT, tree_key BIGINT, lft INT, rgt INT, level SMALLINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX profile_id_idx (profile_id), INDEX profile_option_id_idx (profile_option_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE member_relationship (id INT AUTO_INCREMENT, member_id_to INT NOT NULL, member_id_from INT NOT NULL, is_friend TINYINT, is_friend_pre TINYINT, is_access_block TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_to_idx (member_id_to), INDEX member_id_from_idx (member_id_from), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE message (id INT AUTO_INCREMENT, member_id INT, subject TEXT, body TEXT, is_deleted TINYINT DEFAULT '0' NOT NULL, is_send TINYINT DEFAULT '0' NOT NULL, thread_message_id INT DEFAULT '0', return_message_id INT DEFAULT '0', message_type_id INT, foreign_id INT DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX message_type_id_idx (message_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE message_file (id INT AUTO_INCREMENT, message_id INT NOT NULL, file_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX message_id_idx (message_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE message_send_list (id INT AUTO_INCREMENT, member_id INT, message_id INT, is_read TINYINT DEFAULT '0' NOT NULL, is_deleted TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX message_id_idx (message_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE message_type_translation (id INT, body TEXT, subject TEXT, caption TEXT NOT NULL, info TEXT, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE message_type (id INT AUTO_INCREMENT, type_name TEXT NOT NULL, foreign_table TEXT, is_deleted TINYINT DEFAULT '0' NOT NULL, body TEXT, subject TEXT, caption TEXT NOT NULL, info TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE navigation (id INT AUTO_INCREMENT, type VARCHAR(64) DEFAULT '' NOT NULL, uri TEXT NOT NULL, sort_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE navigation_translation (id INT, caption TEXT NOT NULL, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE notification_mail (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, renderer VARCHAR(64) DEFAULT 'twig' NOT NULL, is_enabled TINYINT DEFAULT '1' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE notification_mail_translation (id INT, title VARCHAR(64) DEFAULT '' NOT NULL, template TEXT NOT NULL, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE o_auth_admin_token (id INT AUTO_INCREMENT, oauth_consumer_id INT NOT NULL, key_string VARCHAR(16) DEFAULT '' NOT NULL, secret VARCHAR(32) DEFAULT '' NOT NULL, type VARCHAR(255) DEFAULT 'request', is_active TINYINT DEFAULT '1' NOT NULL, callback_url TEXT, verifier TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX oauth_consumer_id_idx (oauth_consumer_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE oauth_consumer (id INT AUTO_INCREMENT COMMENT 'Serial number', name VARCHAR(64) DEFAULT '' NOT NULL COMMENT 'Consumer name', description TEXT COMMENT 'Consumer description', key_string VARCHAR(16) DEFAULT '' NOT NULL COMMENT 'Token for this consumer', secret VARCHAR(32) DEFAULT '' NOT NULL COMMENT 'Password for this consumer', file_id INT COMMENT 'Image file id of this consumer', using_apis LONGTEXT COMMENT 'API list that this consumer uses', member_id INT COMMENT 'Member id', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX key_secret_UNIQUE_idx (key_string, secret), INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) COMMENT = 'Saves informations of OAuth Consumer' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE o_auth_member_token (id INT AUTO_INCREMENT, oauth_consumer_id INT NOT NULL, key_string VARCHAR(16) DEFAULT '' NOT NULL, secret VARCHAR(32) DEFAULT '' NOT NULL, type VARCHAR(255) DEFAULT 'request', is_active TINYINT DEFAULT '1' NOT NULL, callback_url TEXT, verifier TEXT, member_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX oauth_consumer_id_idx (oauth_consumer_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE oauth_consumer (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, description TEXT, key_string VARCHAR(16) DEFAULT '' NOT NULL, secret VARCHAR(32) DEFAULT '' NOT NULL, file_id INT, using_apis TEXT, member_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX file_id_idx (file_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE openid_trust_log (id INT AUTO_INCREMENT, member_id INT, uri TEXT, uri_key VARCHAR(32), is_permanent TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE plugin (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, is_enabled TINYINT DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos (id INT AUTO_INCREMENT COMMENT 'id identifies pos', title VARCHAR(255) NOT NULL COMMENT 'title is of pos', description TEXT COMMENT 'desc is of pos', address TEXT COMMENT 'address is of pos', tel VARCHAR(20) COMMENT 'tel is of pos', website VARCHAR(255) COMMENT 'website is of pos', lat FLOAT(18, 2) COMMENT 'latitude theo google map', lng FLOAT(18, 2) COMMENT 'longitude theo google map', tags VARCHAR(255) COMMENT 'tags is of pos', file_id INT COMMENT 'File id', member_id INT NOT NULL COMMENT 'id is of poster', ower_id INT COMMENT 'id is of location', pos_category_id INT COMMENT 'id identifies category', pos_sub_category_id INT COMMENT 'id identifies sub_category', is_public INT DEFAULT '1' NOT NULL COMMENT 'trang thai of pos_checkin', editer VARCHAR(255) COMMENT 'danh sach member_id duoc phep edit pos,moi member_id cach nhau bang dau phay ', type INT DEFAULT '1' COMMENT 'Loại địa điểm cho thường, hay địa điểm đặc biệt', meta TEXT COMMENT 'Chứa các thông tin về title, description, address, tel, website của địa điểm', del_flag TINYINT DEFAULT '0' COMMENT 'Xóa : = 1', rank INT DEFAULT '0' COMMENT 'Xếp hạng địa điểm', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX file_id_idx (file_id), INDEX ower_id_idx (ower_id), INDEX pos_category_id_idx (pos_category_id), INDEX pos_sub_category_id_idx (pos_sub_category_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_category (id INT AUTO_INCREMENT COMMENT 'id identifies category', name VARCHAR(255) NOT NULL COMMENT 'name is of category', description TEXT COMMENT 'desc is of category', name_table VARCHAR(255) COMMENT 'Tên bảng thuộc tính tương ứng với Category', code VARCHAR(100) COMMENT 'code of pos category' UNIQUE, parent_id INT COMMENT 'id identifies category', type TINYINT, file_id INT COMMENT 'File id', order TINYINT DEFAULT '1' NOT NULL COMMENT 'File id', detail_name VARCHAR(255) NOT NULL COMMENT 'sub name is of category', view_flag TINYINT DEFAULT '1' COMMENT 'File id', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX parent_id_idx (parent_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_checkin (id INT AUTO_INCREMENT COMMENT 'id identifies pos_checkin', pos_id INT NOT NULL COMMENT 'id identifies pos', member_id INT NOT NULL COMMENT 'id is of poster', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_checkin', is_public INT DEFAULT '1' NOT NULL COMMENT 'trang thai of pos_checkin', pos_category_id INT COMMENT 'id identifies category', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), INDEX pos_category_id_idx (pos_category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos_comment (id INT AUTO_INCREMENT COMMENT 'id identifies pos_comment', pos_id INT NOT NULL COMMENT 'id identifies pos', content TEXT NOT NULL COMMENT 'content is of pos_comment', member_id INT NOT NULL COMMENT 'id is of poster', file_id INT COMMENT 'File id', website VARCHAR(255) COMMENT 'website is of pos', claim_status TINYINT COMMENT 'claim_status is of pos_comment', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_comment', pos_category_id INT COMMENT 'id identifies category', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), INDEX pos_category_id_idx (pos_category_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_event (id INT AUTO_INCREMENT COMMENT 'id identifies event', pos_id INT NOT NULL COMMENT 'id is of pos', lat FLOAT(18, 2) COMMENT 'latitude theo google map', lng FLOAT(18, 2) COMMENT 'longitude theo google map', member_id INT NOT NULL COMMENT 'id is member', pos_event_category_id INT NOT NULL COMMENT 'id is pos event category ', title VARCHAR(255) NOT NULL COMMENT 'title is of event', description TEXT COMMENT 'desc is of event', website VARCHAR(255) NOT NULL COMMENT 'website of event', file_id INT COMMENT 'File id', start_time DATETIME NOT NULL COMMENT 'Ngày bắt đầu sự kiện', end_time DATETIME NOT NULL COMMENT 'Ngày kết thúc sự kiện', is_public TINYINT DEFAULT '1' NOT NULL, meta TEXT COMMENT 'Chứa các thông tin về title, description, address, tel, website của địa điểm', del_flag TINYINT DEFAULT '0' COMMENT 'Xóa : = 1', rank INT DEFAULT '0' COMMENT 'Xếp hạng sự kiện', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), INDEX pos_event_category_id_idx (pos_event_category_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_event_category (id INT AUTO_INCREMENT COMMENT 'id identifies event category', name VARCHAR(100) NOT NULL COMMENT 'name of event category', description TEXT NOT NULL COMMENT 'des of event category ', file_id INT COMMENT 'File id', sort_order TINYINT DEFAULT '10', code VARCHAR(100) COMMENT 'code of pos event category' UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX file_id_idx (file_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_event_checkin (id INT AUTO_INCREMENT COMMENT 'id identifies pos_checkin', pos_event_id INT NOT NULL COMMENT 'id identifies pos', member_id INT NOT NULL COMMENT 'id is of poster', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_checkin', is_public TINYINT DEFAULT '1' NOT NULL COMMENT 'trang thai of pos_checkin', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_event_id_idx (pos_event_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos_event_comment (id INT AUTO_INCREMENT COMMENT 'id identifies pos_comment', pos_event_id INT NOT NULL COMMENT 'id identifies pos', content TEXT NOT NULL COMMENT 'content is of pos_comment', member_id INT NOT NULL COMMENT 'id is of poster', file_id INT COMMENT 'File id', website VARCHAR(255) COMMENT 'website is of pos', claim_status TINYINT COMMENT 'claim_status is of pos_comment', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_comment', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_event_id_idx (pos_event_id), INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_event_follow (id INT AUTO_INCREMENT COMMENT 'id identifies pos_follow', pos_event_id INT NOT NULL, member_id INT NOT NULL COMMENT 'id is of poster', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_follow', is_public TINYINT DEFAULT '1' NOT NULL COMMENT 'trang thai of pos_checkin', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_event_id_idx (pos_event_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos_event_photo (id INT AUTO_INCREMENT COMMENT 'id identifies pos_photo', member_id INT NOT NULL COMMENT 'id is of poster', pos_event_id INT NOT NULL, file_id INT NOT NULL COMMENT 'File id', claim_status TINYINT COMMENT 'claim_status is of pos_photo', status TINYINT DEFAULT '0' NOT NULL, is_public TINYINT DEFAULT '1' NOT NULL, description TEXT COMMENT 'desc is of pos photo', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_event_id_idx (pos_event_id), INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos_follow (id INT AUTO_INCREMENT COMMENT 'id identifies pos_follow', pos_id INT NOT NULL COMMENT 'id identifies pos', member_id INT NOT NULL COMMENT 'id is of poster', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_follow', is_public INT DEFAULT '1' NOT NULL COMMENT 'trang thai of pos_checkin', pos_category_id INT COMMENT 'id identifies category', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), INDEX pos_category_id_idx (pos_category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos_google (id INT AUTO_INCREMENT COMMENT 'id identifies pos', cid VARCHAR(25) NOT NULL COMMENT 'id of pos google', title VARCHAR(255) NOT NULL COMMENT 'title is of pos', description TEXT COMMENT 'desc is of pos', address TEXT COMMENT 'address is of pos', tel VARCHAR(20) COMMENT 'tel is of pos', website VARCHAR(255) COMMENT 'website is of pos', lat FLOAT(18, 2) COMMENT 'latitude theo google map', lng FLOAT(18, 2) COMMENT 'longitude theo google map', tags VARCHAR(255) COMMENT 'tags is of pos', place_url VARCHAR(255) NOT NULL COMMENT 'Place url', image_url VARCHAR(255) NOT NULL COMMENT 'File image url', category VARCHAR(255) COMMENT 'id identifies category', status SMALLINT DEFAULT '0' NOT NULL COMMENT 'trang thai xu ly of dia diem', keyword VARCHAR(50) COMMENT 'id identifies category', url_search VARCHAR(255) COMMENT 'url lay thong tin', content TEXT NOT NULL COMMENT 'File url', flow_id INT NOT NULL COMMENT 'id identifies pos', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX flow_id_idx (flow_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_google_area (id INT AUTO_INCREMENT COMMENT 'id identifies pos', lat FLOAT(18, 2) COMMENT 'latitude theo google map', lng FLOAT(18, 2) COMMENT 'longitude theo google map', radius FLOAT(18, 2) DEFAULT 0.00 NOT NULL COMMENT 'ban kinh luoi', url TEXT COMMENT 'url lay thong tin', area VARCHAR(50) COMMENT 'id identifies category', radius_area SMALLINT DEFAULT '0' NOT NULL COMMENT 'ban kinh vung quet', min_radius_area SMALLINT DEFAULT '0' NOT NULL COMMENT 'ban kinh vung quet', status SMALLINT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_google_flow (id INT AUTO_INCREMENT COMMENT 'id identifies pos', category VARCHAR(255) COMMENT 'id identifies category', status SMALLINT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', keyword VARCHAR(50) COMMENT 'id identifies category', url TEXT COMMENT 'url lay thong tin', area VARCHAR(50) COMMENT 'id identifies category', stop INT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', size_area INT DEFAULT '0' NOT NULL COMMENT 'So area quet 1 lan', max_content INT DEFAULT '0' NOT NULL COMMENT 'so content lay tren 1 cell', size_content INT DEFAULT '0' NOT NULL COMMENT 'So area quet 1 lan', timeout_content INT DEFAULT '100000' NOT NULL COMMENT 'So ms cho lan sau lay content', timeout_pos INT DEFAULT '100000' NOT NULL COMMENT 'So ms cho lan sau lay pos', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_google_flow_content (id INT AUTO_INCREMENT COMMENT 'id identifies pos', status SMALLINT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', url TEXT COMMENT 'url lay thong tin', area_id INT NOT NULL COMMENT 'id identifies area', start INT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', flow_id INT NOT NULL COMMENT 'id identifies area', content TEXT NOT NULL COMMENT 'File url', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX flow_id_idx (flow_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_log (id INT AUTO_INCREMENT COMMENT 'id identifies pos_log', pos_id INT COMMENT 'id identifies pos', member_id INT NOT NULL COMMENT 'id is of poster', object_id INT COMMENT 'id của tác động', action_name VARCHAR(100) COMMENT 'tên các tác động lên địa điểm', is_public TINYINT DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_photo (id INT AUTO_INCREMENT COMMENT 'id identifies pos_photo', member_id INT NOT NULL COMMENT 'id is of poster', pos_id INT NOT NULL COMMENT 'id identifies pos', file_id INT NOT NULL COMMENT 'File id', claim_status TINYINT COMMENT 'claim_status is of pos_photo', status TINYINT DEFAULT '0' NOT NULL COMMENT 'status is of pos_photo', is_public INT DEFAULT '1' NOT NULL COMMENT 'trang thai of pos_checkin', description TEXT COMMENT 'desc is of pos photo', pos_category_id INT COMMENT 'id identifies category', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), INDEX file_id_idx (file_id), INDEX pos_category_id_idx (pos_category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pos_rent_house (id INT AUTO_INCREMENT COMMENT 'id identifies posCategoryAtribute', pos_id INT NOT NULL COMMENT ' ', price FLOAT(5, 2) COMMENT 'Giá cho thuê nhà', unit_price VARCHAR(100) COMMENT 'đơn vị giá', const_price_ranges TINYINT COMMENT 'Khoảng giá trị của giá nhà cho thuê ', status TINYINT COMMENT 'Trạng thái còn\ hết phòng', area TINYINT COMMENT 'diện tích phòng ', unit_area VARCHAR(100) COMMENT 'đơn vị diện tích', num_room TINYINT COMMENT 'Số phòng ', direction VARCHAR(100) COMMENT 'hướng nhà ', contact_name VARCHAR(50) COMMENT 'Tên người liên hệ', contact_email VARCHAR(50) COMMENT 'Email liên hệ', contact_tel VARCHAR(20) COMMENT 'Điện thoại liên hệ', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_rent_house_crawl_pos (id INT AUTO_INCREMENT COMMENT 'id identifies pos', source_id INT NOT NULL COMMENT 'id is of poster', cid VARCHAR(50) COMMENT 'url lay thong tin', url VARCHAR(255) COMMENT 'url lay thong tin', title VARCHAR(255) NOT NULL COMMENT 'title is of pos', description TEXT COMMENT 'desc is of pos', address TEXT COMMENT 'address is of pos', tel VARCHAR(20) COMMENT 'tel is of pos', website VARCHAR(255) COMMENT 'website is of pos', lat FLOAT(18, 2) COMMENT 'latitude theo google map', lng FLOAT(18, 2) COMMENT 'longitude theo google map', tags VARCHAR(255) COMMENT 'tags is of pos', file_id INT COMMENT 'File id', pos_sub_category_id INT COMMENT 'id identifies sub_category', price VARCHAR(50) COMMENT 'Giá cho thuê nhà', unit_price VARCHAR(100) COMMENT 'đơn vị giá', area VARCHAR(50) COMMENT 'diện tích phòng ', unit_area VARCHAR(100) COMMENT 'đơn vị diện tích', num_room TINYINT COMMENT 'Số phòng ', direction VARCHAR(100) COMMENT 'hướng nhà ', contact_name VARCHAR(50) COMMENT 'Tên người liên hệ', contact_email VARCHAR(50) COMMENT 'Email liên hệ', contact_tel VARCHAR(20) COMMENT 'Điện thoại liên hệ', status SMALLINT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_rent_house_crawl_source (id INT AUTO_INCREMENT COMMENT 'id identifies pos', area VARCHAR(50) COMMENT 'id identifies category', source VARCHAR(50) COMMENT 'id identifies category', url VARCHAR(255) COMMENT 'url lay thong tin', status SMALLINT DEFAULT '0' NOT NULL COMMENT 'trang thai of dia diem', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_sponsor (id INT AUTO_INCREMENT COMMENT 'id identifies pos_sponsor', pos_id INT NOT NULL COMMENT 'id identifies pos', member_id INT NOT NULL COMMENT 'id is of poster', expire_date DATETIME NOT NULL COMMENT 'ngày hết hạn tài trợ', position VARCHAR(255), sort_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pos_warn (id INT AUTO_INCREMENT COMMENT 'id identifies pos_warn', pos_id INT NOT NULL COMMENT 'id identifies pos', member_id INT NOT NULL COMMENT 'id is of poster', content TEXT NOT NULL COMMENT 'content is of pos_warn', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pos_id_idx (pos_id), INDEX member_id_idx (member_id), PRIMARY KEY(id)) COMMENT = '' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE profile (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, is_required TINYINT DEFAULT '0' NOT NULL, is_unique TINYINT DEFAULT '0' NOT NULL, is_edit_public_flag TINYINT DEFAULT '0' NOT NULL, default_public_flag TINYINT DEFAULT '1' NOT NULL, form_type VARCHAR(32) DEFAULT '' NOT NULL, value_type VARCHAR(32) DEFAULT '' NOT NULL, is_disp_regist TINYINT DEFAULT '0' NOT NULL, is_disp_config TINYINT DEFAULT '0' NOT NULL, is_disp_search TINYINT DEFAULT '0' NOT NULL, is_public_web TINYINT DEFAULT '0' NOT NULL, value_regexp TEXT, value_min VARCHAR(32), value_max VARCHAR(32), sort_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile_option (id INT AUTO_INCREMENT, profile_id INT NOT NULL, sort_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX profile_id_idx (profile_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile_option_translation (id INT, value TEXT, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE profile_translation (id INT, caption TEXT NOT NULL, info TEXT, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE message (id INT AUTO_INCREMENT, member_id INT, subject TEXT, body TEXT, is_deleted TINYINT(1) DEFAULT '0' NOT NULL, is_send TINYINT(1) DEFAULT '0' NOT NULL, thread_message_id INT DEFAULT 0, return_message_id INT DEFAULT 0, message_type_id INT, foreign_id INT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX member_id_idx (member_id), INDEX message_type_id_idx (message_type_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE session (id VARCHAR(128), session_data TEXT, time TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE skin_config (id INT AUTO_INCREMENT, plugin VARCHAR(64) DEFAULT '' NOT NULL, name VARCHAR(64) DEFAULT '' NOT NULL, value TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sns_config (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, value TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sns_term (id INT AUTO_INCREMENT, name VARCHAR(64) DEFAULT '' NOT NULL, application VARCHAR(32) DEFAULT 'pc_frontend' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sns_term_translation (id INT, value TEXT, lang CHAR(5), PRIMARY KEY(id, lang)) ENGINE = INNODB;
ALTER TABLE activity_data ADD CONSTRAINT activity_data_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE activity_image ADD CONSTRAINT activity_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE activity_image ADD CONSTRAINT activity_image_activity_data_id_activity_data_id FOREIGN KEY (activity_data_id) REFERENCES activity_data(id);
ALTER TABLE album ADD CONSTRAINT album_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE album ADD CONSTRAINT album_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE album_image ADD CONSTRAINT album_image_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE album_image ADD CONSTRAINT album_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE album_image ADD CONSTRAINT album_image_album_id_album_id FOREIGN KEY (album_id) REFERENCES album(id) ON DELETE CASCADE;
ALTER TABLE application_translation ADD CONSTRAINT application_translation_id_application_id FOREIGN KEY (id) REFERENCES application(id);
ALTER TABLE application ADD CONSTRAINT application_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE application_invite ADD CONSTRAINT application_invite_to_member_id_member_id FOREIGN KEY (to_member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE application_invite ADD CONSTRAINT application_invite_from_member_id_member_id FOREIGN KEY (from_member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE application_invite ADD CONSTRAINT application_invite_application_id_application_id FOREIGN KEY (application_id) REFERENCES application(id) ON DELETE CASCADE;
ALTER TABLE application_lifecycle_event_queue ADD CONSTRAINT application_lifecycle_event_queue_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE application_lifecycle_event_queue ADD CONSTRAINT application_lifecycle_event_queue_application_id_application_id FOREIGN KEY (application_id) REFERENCES application(id) ON DELETE CASCADE;
ALTER TABLE application_persistent_data ADD CONSTRAINT application_persistent_data_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE application_persistent_data ADD CONSTRAINT application_persistent_data_application_id_application_id FOREIGN KEY (application_id) REFERENCES application(id) ON DELETE CASCADE;
ALTER TABLE ashiato ADD CONSTRAINT ashiato_member_id_to_member_id FOREIGN KEY (member_id_to) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE ashiato ADD CONSTRAINT ashiato_member_id_from_member_id FOREIGN KEY (member_id_from) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE banner_image ADD CONSTRAINT banner_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE banner_translation ADD CONSTRAINT banner_translation_id_banner_id FOREIGN KEY (id) REFERENCES banner(id);
ALTER TABLE banner_use_image ADD CONSTRAINT banner_use_image_banner_image_id_banner_image_id FOREIGN KEY (banner_image_id) REFERENCES banner_image(id);
ALTER TABLE banner_use_image ADD CONSTRAINT banner_use_image_banner_id_banner_id FOREIGN KEY (banner_id) REFERENCES banner(id);
ALTER TABLE blog_rss_cache ADD CONSTRAINT blog_rss_cache_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE community ADD CONSTRAINT community_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE community ADD CONSTRAINT community_community_category_id_community_category_id FOREIGN KEY (community_category_id) REFERENCES community_category(id);
ALTER TABLE community_config ADD CONSTRAINT community_config_community_id_community_id FOREIGN KEY (community_id) REFERENCES community(id);
ALTER TABLE community_event_image ADD CONSTRAINT community_event_image_post_id_community_event_id FOREIGN KEY (post_id) REFERENCES community_event(id);
ALTER TABLE community_event_image ADD CONSTRAINT community_event_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE community_event ADD CONSTRAINT community_event_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE community_event ADD CONSTRAINT community_event_community_id_community_id FOREIGN KEY (community_id) REFERENCES community(id) ON DELETE CASCADE;
ALTER TABLE community_event_comment_image ADD CONSTRAINT community_event_comment_image_post_id_community_event_comment_id FOREIGN KEY (post_id) REFERENCES community_event_comment(id);
ALTER TABLE community_event_comment_image ADD CONSTRAINT community_event_comment_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE community_event_comment ADD CONSTRAINT community_event_comment_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE community_event_comment ADD CONSTRAINT community_event_comment_community_event_id_community_event_id FOREIGN KEY (community_event_id) REFERENCES community_event(id) ON DELETE CASCADE;
ALTER TABLE community_event_member ADD CONSTRAINT community_event_member_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE community_event_member ADD CONSTRAINT community_event_member_community_event_id_community_event_id FOREIGN KEY (community_event_id) REFERENCES community_event(id) ON DELETE CASCADE;
ALTER TABLE community_member ADD CONSTRAINT community_member_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE community_member ADD CONSTRAINT community_member_community_id_community_id FOREIGN KEY (community_id) REFERENCES community(id);
ALTER TABLE community_member_position ADD CONSTRAINT community_member_position_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE community_member_position ADD CONSTRAINT community_member_position_community_id_community_id FOREIGN KEY (community_id) REFERENCES community(id);
ALTER TABLE community_member_position ADD CONSTRAINT ccci FOREIGN KEY (community_member_id) REFERENCES community_member(id);
ALTER TABLE community_topic_image ADD CONSTRAINT community_topic_image_post_id_community_topic_id FOREIGN KEY (post_id) REFERENCES community_topic(id);
ALTER TABLE community_topic_image ADD CONSTRAINT community_topic_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE community_topic ADD CONSTRAINT community_topic_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE community_topic ADD CONSTRAINT community_topic_community_id_community_id FOREIGN KEY (community_id) REFERENCES community(id) ON DELETE CASCADE;
ALTER TABLE community_topic_comment_image ADD CONSTRAINT community_topic_comment_image_post_id_community_topic_comment_id FOREIGN KEY (post_id) REFERENCES community_topic_comment(id);
ALTER TABLE community_topic_comment_image ADD CONSTRAINT community_topic_comment_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE community_topic_comment ADD CONSTRAINT community_topic_comment_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE community_topic_comment ADD CONSTRAINT community_topic_comment_community_topic_id_community_topic_id FOREIGN KEY (community_topic_id) REFERENCES community_topic(id) ON DELETE CASCADE;
ALTER TABLE deleted_message ADD CONSTRAINT deleted_message_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE diary ADD CONSTRAINT diary_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE diary_comment ADD CONSTRAINT diary_comment_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE diary_comment ADD CONSTRAINT diary_comment_diary_id_diary_id FOREIGN KEY (diary_id) REFERENCES diary(id) ON DELETE CASCADE;
ALTER TABLE diary_comment_image ADD CONSTRAINT diary_comment_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE diary_comment_image ADD CONSTRAINT diary_comment_image_diary_comment_id_diary_comment_id FOREIGN KEY (diary_comment_id) REFERENCES diary_comment(id) ON DELETE CASCADE;
ALTER TABLE diary_comment_unread ADD CONSTRAINT diary_comment_unread_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE diary_comment_unread ADD CONSTRAINT diary_comment_unread_diary_id_diary_id FOREIGN KEY (diary_id) REFERENCES diary(id) ON DELETE CASCADE;
ALTER TABLE diary_comment_update ADD CONSTRAINT diary_comment_update_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE diary_comment_update ADD CONSTRAINT diary_comment_update_diary_id_diary_id FOREIGN KEY (diary_id) REFERENCES diary(id) ON DELETE CASCADE;
ALTER TABLE diary_image ADD CONSTRAINT diary_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE diary_image ADD CONSTRAINT diary_image_diary_id_diary_id FOREIGN KEY (diary_id) REFERENCES diary(id) ON DELETE CASCADE;
ALTER TABLE favorite ADD CONSTRAINT favorite_member_id_to_member_id FOREIGN KEY (member_id_to) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE favorite ADD CONSTRAINT favorite_member_id_from_member_id FOREIGN KEY (member_id_from) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE gadget_config ADD CONSTRAINT gadget_config_gadget_id_gadget_id FOREIGN KEY (gadget_id) REFERENCES gadget(id);
ALTER TABLE intro_friend ADD CONSTRAINT intro_friend_member_id_to_member_relationship_member_id_to FOREIGN KEY (member_id_to) REFERENCES member_relationship(member_id_to);
ALTER TABLE intro_friend ADD CONSTRAINT intro_friend_member_id_to_member_id FOREIGN KEY (member_id_to) REFERENCES member(id);
ALTER TABLE intro_friend ADD CONSTRAINT intro_friend_member_id_from_member_id FOREIGN KEY (member_id_from) REFERENCES member(id);
ALTER TABLE member_application ADD CONSTRAINT member_application_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE member_application ADD CONSTRAINT member_application_application_id_application_id FOREIGN KEY (application_id) REFERENCES application(id) ON DELETE CASCADE;
ALTER TABLE member_application_setting ADD CONSTRAINT mmmi FOREIGN KEY (member_application_id) REFERENCES member_application(id) ON DELETE CASCADE;
ALTER TABLE member_config ADD CONSTRAINT member_config_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE member_image ADD CONSTRAINT member_image_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE member_image ADD CONSTRAINT member_image_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE member_profile ADD CONSTRAINT member_profile_profile_option_id_profile_option_id FOREIGN KEY (profile_option_id) REFERENCES profile_option(id);
ALTER TABLE member_profile ADD CONSTRAINT member_profile_profile_id_profile_id FOREIGN KEY (profile_id) REFERENCES profile(id);
ALTER TABLE member_profile ADD CONSTRAINT member_profile_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE member_relationship ADD CONSTRAINT member_relationship_member_id_to_member_id FOREIGN KEY (member_id_to) REFERENCES member(id);
ALTER TABLE member_relationship ADD CONSTRAINT member_relationship_member_id_from_member_id FOREIGN KEY (member_id_from) REFERENCES member(id);
ALTER TABLE message ADD CONSTRAINT message_message_type_id_message_type_id FOREIGN KEY (message_type_id) REFERENCES message_type(id);
ALTER TABLE message ADD CONSTRAINT message_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE message_file ADD CONSTRAINT message_file_message_id_message_id FOREIGN KEY (message_id) REFERENCES message(id) ON DELETE CASCADE;
ALTER TABLE message_file ADD CONSTRAINT message_file_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE message_send_list ADD CONSTRAINT message_send_list_message_id_message_id FOREIGN KEY (message_id) REFERENCES message(id);
ALTER TABLE message_send_list ADD CONSTRAINT message_send_list_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE message_type_translation ADD CONSTRAINT message_type_translation_id_message_type_id FOREIGN KEY (id) REFERENCES message_type(id);
ALTER TABLE navigation_translation ADD CONSTRAINT navigation_translation_id_navigation_id FOREIGN KEY (id) REFERENCES navigation(id);
ALTER TABLE notification_mail_translation ADD CONSTRAINT notification_mail_translation_id_notification_mail_id FOREIGN KEY (id) REFERENCES notification_mail(id);
ALTER TABLE o_auth_admin_token ADD CONSTRAINT o_auth_admin_token_oauth_consumer_id_oauth_consumer_id FOREIGN KEY (oauth_consumer_id) REFERENCES oauth_consumer(id);
ALTER TABLE oauth_consumer ADD CONSTRAINT oauth_consumer_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE oauth_consumer ADD CONSTRAINT oauth_consumer_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE SET NULL;
ALTER TABLE o_auth_member_token ADD CONSTRAINT o_auth_member_token_oauth_consumer_id_oauth_consumer_id FOREIGN KEY (oauth_consumer_id) REFERENCES oauth_consumer(id);
ALTER TABLE o_auth_member_token ADD CONSTRAINT o_auth_member_token_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE oauth_consumer ADD CONSTRAINT oauth_consumer_member_id_member_id_1 FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE oauth_consumer ADD CONSTRAINT oauth_consumer_file_id_file_id_1 FOREIGN KEY (file_id) REFERENCES file(id);
ALTER TABLE openid_trust_log ADD CONSTRAINT openid_trust_log_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id);
ALTER TABLE pos ADD CONSTRAINT pos_pos_sub_category_id_pos_category_id FOREIGN KEY (pos_sub_category_id) REFERENCES pos_category(id);
ALTER TABLE pos ADD CONSTRAINT pos_pos_category_id_pos_category_id FOREIGN KEY (pos_category_id) REFERENCES pos_category(id) ON DELETE CASCADE;
ALTER TABLE pos ADD CONSTRAINT pos_ower_id_member_id FOREIGN KEY (ower_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos ADD CONSTRAINT pos_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_category ADD CONSTRAINT pos_category_parent_id_pos_category_id FOREIGN KEY (parent_id) REFERENCES pos_category(id) ON DELETE CASCADE;
ALTER TABLE pos_category ADD CONSTRAINT pos_category_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_checkin ADD CONSTRAINT pos_checkin_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_checkin ADD CONSTRAINT pos_checkin_pos_category_id_pos_category_id FOREIGN KEY (pos_category_id) REFERENCES pos_category(id) ON DELETE CASCADE;
ALTER TABLE pos_checkin ADD CONSTRAINT pos_checkin_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_comment ADD CONSTRAINT pos_comment_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_comment ADD CONSTRAINT pos_comment_pos_category_id_pos_category_id FOREIGN KEY (pos_category_id) REFERENCES pos_category(id) ON DELETE CASCADE;
ALTER TABLE pos_comment ADD CONSTRAINT pos_comment_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_comment ADD CONSTRAINT pos_comment_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_event ADD CONSTRAINT pos_event_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_event ADD CONSTRAINT pos_event_pos_event_category_id_pos_event_category_id FOREIGN KEY (pos_event_category_id) REFERENCES pos_event_category(id) ON DELETE CASCADE;
ALTER TABLE pos_event ADD CONSTRAINT pos_event_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_event ADD CONSTRAINT pos_event_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_event_category ADD CONSTRAINT pos_event_category_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_event_checkin ADD CONSTRAINT pos_event_checkin_pos_event_id_pos_event_id FOREIGN KEY (pos_event_id) REFERENCES pos_event(id) ON DELETE CASCADE;
ALTER TABLE pos_event_checkin ADD CONSTRAINT pos_event_checkin_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_event_comment ADD CONSTRAINT pos_event_comment_pos_event_id_pos_event_id FOREIGN KEY (pos_event_id) REFERENCES pos_event(id) ON DELETE CASCADE;
ALTER TABLE pos_event_comment ADD CONSTRAINT pos_event_comment_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_event_comment ADD CONSTRAINT pos_event_comment_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_event_follow ADD CONSTRAINT pos_event_follow_pos_event_id_pos_event_id FOREIGN KEY (pos_event_id) REFERENCES pos_event(id) ON DELETE CASCADE;
ALTER TABLE pos_event_follow ADD CONSTRAINT pos_event_follow_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_event_photo ADD CONSTRAINT pos_event_photo_pos_event_id_pos_event_id FOREIGN KEY (pos_event_id) REFERENCES pos_event(id) ON DELETE CASCADE;
ALTER TABLE pos_event_photo ADD CONSTRAINT pos_event_photo_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_event_photo ADD CONSTRAINT pos_event_photo_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_follow ADD CONSTRAINT pos_follow_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_follow ADD CONSTRAINT pos_follow_pos_category_id_pos_category_id FOREIGN KEY (pos_category_id) REFERENCES pos_category(id) ON DELETE CASCADE;
ALTER TABLE pos_follow ADD CONSTRAINT pos_follow_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_google ADD CONSTRAINT pos_google_flow_id_pos_google_flow_id FOREIGN KEY (flow_id) REFERENCES pos_google_flow(id) ON DELETE CASCADE;
ALTER TABLE pos_google_flow_content ADD CONSTRAINT pos_google_flow_content_flow_id_pos_google_flow_id FOREIGN KEY (flow_id) REFERENCES pos_google_flow(id) ON DELETE CASCADE;
ALTER TABLE pos_log ADD CONSTRAINT pos_log_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_log ADD CONSTRAINT pos_log_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_photo ADD CONSTRAINT pos_photo_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_photo ADD CONSTRAINT pos_photo_pos_category_id_pos_category_id FOREIGN KEY (pos_category_id) REFERENCES pos_category(id) ON DELETE CASCADE;
ALTER TABLE pos_photo ADD CONSTRAINT pos_photo_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_photo ADD CONSTRAINT pos_photo_file_id_file_id FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE;
ALTER TABLE pos_rent_house ADD CONSTRAINT pos_rent_house_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_sponsor ADD CONSTRAINT pos_sponsor_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_sponsor ADD CONSTRAINT pos_sponsor_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE pos_warn ADD CONSTRAINT pos_warn_pos_id_pos_id FOREIGN KEY (pos_id) REFERENCES pos(id) ON DELETE CASCADE;
ALTER TABLE pos_warn ADD CONSTRAINT pos_warn_member_id_member_id FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE CASCADE;
ALTER TABLE profile_option ADD CONSTRAINT profile_option_profile_id_profile_id FOREIGN KEY (profile_id) REFERENCES profile(id);
ALTER TABLE profile_option_translation ADD CONSTRAINT profile_option_translation_id_profile_option_id FOREIGN KEY (id) REFERENCES profile_option(id);
ALTER TABLE profile_translation ADD CONSTRAINT profile_translation_id_profile_id FOREIGN KEY (id) REFERENCES profile(id);
ALTER TABLE message ADD CONSTRAINT message_member_id_member_id_1 FOREIGN KEY (member_id) REFERENCES member(id) ON DELETE SET NULL;
ALTER TABLE sns_term_translation ADD CONSTRAINT sns_term_translation_id_sns_term_id FOREIGN KEY (id) REFERENCES sns_term(id);
