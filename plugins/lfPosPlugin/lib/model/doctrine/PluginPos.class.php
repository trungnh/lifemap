<?php

/**
 * PluginPos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginPos extends BasePos
{
  public function getImageFileName()
  {
    if ($this->File)
    {      
      return $this->File->name;
    }
    return '';
  }
  public function getUrlTitle(){
      return opToolkit::convertUrlVietNamese($this->title);
  }
  public function isEditer($member_id) {
        $test = false;
        if($this->getOwer_id()) {
            if($member_id == $this->getOwer_id())
                return true;
        }
        if($member_id == $this->getMember_id())
            return true;
        if($this->getEditer()) {
            $editers = explode(',',$pos->getEditer());
            foreach($editers as $editer) {
                if($member_id == $editer) {
                    return true;
                }
            }
        }
        return $test;
    }
    /**
     * Lấy thông tin người đăng
     */
    public function getMember(){
        return Doctrine::getTable('Member')->find($this->getMemberId());
    }
    /**
     * Lấy thông tin người đăng
     */
    public function getOwner(){
        return Doctrine::getTable('Member')->find($this->getOwerId());
    }
    /**
     * Lấy thông tin người đăng
     */
    public function getListEditers(){
        $listEditers = array();
        if($this->getEditer()) {
            $editers = explode(',',$this->getEditer());
            foreach($editers as $editer) {
                $listEditers[] = Doctrine::getTable('Member')->find($editer);
            }
        }
        return $listEditers;
    }
   public function getSubTitle($length = null){
        if(!isset($length)) $length = 110;
        if(strlen(utf8_decode($this->getTitle()))>$length){
          $space = strrpos($this->getTitle(), " ", -(strlen($this->getTitle()) - $length));
          $str = substr($this->getTitle(),0,$space).'...';
          return $str;
        }else{
          return $this->getTitle();
        }
    }
    public function getSubAddress($length = null){
        if(!isset($length)) $length = 45;
        if(strlen( utf8_decode($this->getAddress()) )>$length){
          $space = strrpos($this->getAddress(), " ", -(strlen($this->getAddress()) - $length));
          $str = substr($this->getAddress(),0,$space).' ...';
          return $str;
        }else{
          return $this->getAddress();
        }
    }
    
    public function getTitleSlug()
    {
        return opToolkit::slugify($this->getTitle());
    }
    public function getMetaFromContent(){
        return $this->title. ',' . $this->address .','.$this->tags;
    }
}