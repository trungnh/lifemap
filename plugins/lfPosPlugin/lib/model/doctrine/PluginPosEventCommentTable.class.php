<?php

/**
 * PluginPosEventCommentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosEventCommentTable extends Doctrine_Table {

    const is_allow = 1; /* comment du?c public */
    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosEventCommentTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginPosEventComment');
    }

    public function getCommentNumber($id) {
        $q = $this->createQuery('pc')
                ->where('pc.pos_event_id = ?', $id);
        return count($q);
    }

    public function getListPosEventCommentPager($eventId,$page = 1,$size = 10){
        $q = $this->getListPosEventComment($eventId);
        return $this->getPager($q,$page,$size);
    }
    public function getListPosEventComment($eventId){
        return $q = $this->createQuery()
          ->where('pos_event_id =?',$eventId)
          ->andWhere('status =?',self::is_allow)
          ->orderBy('created_at DESC');
    }
    public function getPager($q,$page = 1,$size = 10){
        $pager = new sfDoctrinePager('PosEventtComment',$size);
        $pager->setQuery($q);
        $pager->setPage($page);
        $pager->init();
        return $pager;
    }
    public function save($content,$memberId,$eventId,$website){
        $comment = new PosEventComment();
        $comment->content = $content;
        $comment->pos_event_id = $eventId;
        $comment->member_id = $memberId;
        $comment->status = self::is_allow;
        $comment->website = $website;
        $comment->save();
        return $comment;
    }
    public function saveImage($memberId,$eventId,$fileId){
        $comment = new PosEventComment();
        $comment->pos_event_id = $eventId;
        $comment->member_id = $memberId;
        $comment->status = self::is_allow;
        $comment->file_id = $fileId;
        $comment->save();
        return $comment;
    }
     public function update($content,$commentId){
        $q = $this->createQuery()
          ->set('content','?',$content)
          ->where('id =?',$commentId);
        return $q->execute();
    }
    
    public function getCommentNumByEventId($id) {
        $q = $this->createQuery()
                ->where('pos_event_id=?', $id);
        return count($q);
    }
}