<?php

include_once '../plugins/sfImageHandlerPlugin/lib/helper/sfImageHelper.php';

/**
 * PluginPosEventTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosEventTable extends Doctrine_Table {

    const is_public = 1;
    const is_show = 1;
    const is_private = 0;
    const r = 17; /* Bán kính 17 km */

    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosEventTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginPosEvent');
    }

    /* huent
     * Sự kiến mới nhất của địa điểm
     */

    public function getTheNewestEvent($posId) {
        $q = $this->createQuery()
                ->where('pos_id =?', $posId)
                ->orderBy('created_at DESC');
        return $q->fetchOne();
    }

    protected function getPager(Doctrine_Query $q, $page, $size) {
        $pager = new sfDoctrinePager('PosEvent', $size);
        $pager->setQuery($q);
        $pager->setPage($page);
        $pager->init();
        return $pager;
    }

    public function getPosCurrentGroupon($page = 1, $size = 30, $position = null) {
        $q = $this->createQuery('e')
                ->where('e.is_public =?', self::is_public)
                ->andWhere('e.lat < ?', $position['max_lat'])
                ->andWhere('e.lat > ?', $position['min_lat'])
                ->andWhere('e.lng < ?', $position['max_lng'])
                ->andWhere('e.lng > ?', $position['min_lng'])
                ->andWhere('e.end_time >= ?', date('Y-m-d h:i:s', time()))
                ->andWhere('e.del_flag = 0')
                ->orderBy('e.created_at desc ');

        if ($q->count()) {
            return $this->getPager($q, $page, $size);
        } else {
            $position = opToolkit::expansionAreaSearch($position, self::r);
            $q = $this->createQuery('e')
                    ->where('e.is_public =?', self::is_public)
                    ->andWhere('e.lat < ?', $position['max_lat'])
                    ->andWhere('e.lat > ?', $position['min_lat'])
                    ->andWhere('e.lng < ?', $position['max_lng'])
                    ->andWhere('e.lng > ?', $position['min_lng'])
                    ->andWhere('e.end_time >= ?', date('Y-m-d h:i:s', time()))
                    ->andWhere('e.del_flag = 0')
                    ->orderBy('e.created_at desc ');
            if ($q->count()) {
                return $this->getPager($q, $page, $size);
            } else {
                return $this->getEventPosListPager($page, $size);
            }
        }
    }

    public function getEventPosListPager($page = 1, $size = 30) {
        $q = $this->createQuery('e')
                ->where('e.is_public =?', self::is_public)
                ->andWhere('e.end_time >= ?', time())
                ->andWhere('e.del_flag = 0')
                ->orderBy('e.created_at desc ');

        return $this->getPager($q, $page, $size);
    }

    /*
     * lấy về danh sách các sự kiện tại địa điểm này
     * @muoidv
     */

    public function getListEventLocation($pos_id, $limit) {
        $q = $this->createQuery()
                ->where('pos_id = ?', $pos_id)
                ->orderBy('created_at DESC')
                ->limit($limit);
        return $q->execute();
    }
    /* huent
     * Danh sách các sự kiện cùng địa điểm
     */
    public function getListSimilarPosEvents($posId, $eventId){
        $q = $this->createQuery()
          ->where('pos_id =?',$posId)
          ->andWhere('id <>?',$eventId)
          ->andWhere('is_public =?',self::is_public)
          ->orderBy('created_at DESC')
          ->limit(5);
        return $q->execute();
    }
    /* Danh sách những sự kiện gần đây */
    public function getListNearEvent($lng, $lat, $eventId, $num = 5) {
        $q = $this->createQuery('');
        $q->where('is_public = ?', self::is_public);
        $q->andWhere('lat < ?', $lat[0]);
        $q->andWhere('lat > ?', $lat[1]);
        $q->andWhere('lng < ?', $lng[0]);
        $q->andWhere('lng > ?', $lng[1]);
        $q->andWhere('id <>?',$eventId);
        $q->orderBy('RAND()');
        $q->limit($num);
        return $q->execute();
    }
}
<<<<<<< .mine

=======
>>>>>>> .r371
