<?php

include_once '../plugins/sfImageHandlerPlugin/lib/helper/sfImageHelper.php';

/**
 * PluginPosEventTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosEventTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosEventTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginPosEvent');
    }

    /* huent
     * Sự kiến mới nhất của địa điểm
     */

    public function getTheNewestEvent($posId) {
        $q = $this->createQuery()
                ->where('pos_id =?', $posId)
                ->orderBy('created_at DESC');
        return $q->fetchOne();
    }

    /*
     * tuent
     * lấy ra các sự kiện còn hạn, order by ranking, ngày tạo 
     */

    public function getAllAvailableEventsByCategory($position, $options) {
        $page = $options['page'];
        $size = 1;

        // lay ra cac events
        $q = $this->createQuery('e')
                ->select('
                    e.id,
                    e.title,
                    e.pos_event_category_id,
                    e.description,
                    e.file_id,
                    e.start_time,
                    e.end_time,
                    e.lat,
                    e.lng,
                    e.created_at
                ')
                ->where('e.end_time > ?', date('Y-m-d H:i:s', time()))
                ->andWhere('del_flag = ?', 0)
                ->andWhere('e.is_public = ?', 1)
                ->andWhere('e.lat < ?', $position['max_lat'])
                ->andWhere('e.lat > ?', $position['min_lat'])
                ->andWhere('e.lng < ?', $position['max_lng'])
                ->andWhere('e.lng > ?', $position['min_lng'])
                ->orderBy('e.rank DESC')
                ->addOrderBy('e.created_at DESC');

        // lay ra pager
        $list = $this->getPager($q, $page, $size);

        // chuan bi ket qua tra ve
        $output = array(
            'status' => true,
            'page' => $list->getPage(),
            'size' => $list->getMaxPerPage(),
            'total' => $list->getCountQuery()->count(),
            'last' => $list->getLastPage(),
            'list' => array()
        );

        foreach ($list as $item) {
            $output['list'][] = array(
                'id' => $item->getId(),
                'category' => Doctrine_Core::getTable('PosEventCategory')->getEventCategoryById($item->getPosEventCategoryId()),
                'description' => substr($item->getDesCription(), 0, 200),
                'file_id' => $item->getFileId(),
                'start_time' => date('d/m/Y H:i', strtotime($item->getStartTime())),
                'end_time' => date('d/m/Y H:i', strtotime($item->getEndTime())),
                'lat' => $item->getLat(),
                'lng' => $item->getLng(),
                'website' => $item->getWebsite(),
                'rank' => $item->getRank(),
                'title' => $item->getTitle(),
                'address' => $item->getPos()->getAddress(),
                'followers' => Doctrine_Core::getTable('PosEventFollow')->getFollowNumber($item->getId()),
                'checkins' => Doctrine_Core::getTable('PosEventCheckin')->getCheckinNumber($item->getId()),
                'comments' => Doctrine_Core::getTable('PosEventComment')->getCommentNumber($item->getId()),
                'avatar' => sf_image_path($item->getFile(), array('size' => '130x130'), true),
                'place' => $item->getPos()->getTitle()
            );
        }

        return $output;
    }

    protected function getPager(Doctrine_Query $q, $page, $size) {
        $pager = new sfDoctrinePager('PosEvent', $size);
        $pager->setQuery($q);
        $pager->setPage($page);
        $pager->init();
        return $pager;
    }

    /*
     * lấy về danh sách các sự kiện tại địa điểm này
     * @muoidv
     */
    public function getListEventLocation($pos_id,$limit){
        $q= $this->createQuery()
            ->where('pos_id =?',$pos_id)
            ->orderBy('created_at DESC')
            ->limit($limit);
        return $q->execute();
    }
}