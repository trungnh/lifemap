<?php

/**
 * PluginPosFollowTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosFollowTable extends Doctrine_Table {
    const is_public = 1;
    const is_private = 0;
    const is_active = 1;
    const is_show = 1;
    const r = 17; /* Bán kính 17 km */
    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosFollowTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginPosFollow');
    }
    public function followMemberCount($posId) {
        $q = $this->createQuery()
            ->where('pos_id = ?',$posId);
        return $q->count();
    }
    public function followFriendCount($posId,$memberId) {
        $friendMemberIds = Doctrine::getTable('MemberRelationship')->getFriendMemberIds($memberId);

        if (!count($friendMemberIds)) {
            return null;
        }
        $q = $this->createQuery()
            ->whereIn('member_id' , $friendMemberIds);
            //->andWhere('pos_id = ?',$posId);
        return $q->count();      
    }

    public function getFollowStatus($posId,$memberId) {
        $q = $this->createQuery()
            ->where('pos_id = ?',$posId)
            ->andWhere('member_id = ?',$memberId)
            ->andWhere('is_public =?',self::is_public);
        $user = $q->fetchOne();
        if(count($user)>0)
            return $user;
        else
            return null;
    }

    public function getFollowFriends($posId,$memberId) {
        $friendMemberIds = Doctrine::getTable('MemberRelationship')->getFriendMemberIds($memberId);

        if (!count($friendMemberIds)) {
            return null;
        }
        $q = $this->createQuery()            
            ->whereIn('member_id' , $friendMemberIds)
            ->andWhere('pos_id = ?',$posId)
            ->andWhere('is_public = ?',self::is_public)
            ->andWhere('status = ?',1);
        return $q->execute();
    }
    public function getAllMemberFollowPos($posId){
        $q = $this->createQuery()
            ->where('pos_id = ?',$posId)
            ->andWhere('is_public = ?',self::is_public);
        return $q->execute();
    }
    public function getFollowMembers($posId) {
        $q = $this->createQuery()
            ->where('pos_id = ?',$posId)
            ->andWhere('is_public = ?',self::is_public);
        return $q->execute();
    }

   /* Dem so lan follow cua member  */
    public function getNumberOfFollow($memberId) {
        $q = $this->createQuery()
            ->where('member_id = ?',$memberId);
        return $q->count();
    }

   /* Lay listPos member da follow */
    public function getListFollow($memberId,$num = null) {
        $followPosIds = $this->getSomeFollowPosIds($memberId,$num);

        if (!count($followPosIds)) {
            return null;
        }

        $q = Doctrine::getTable('Pos')->createQuery()
            ->whereIn('id', $followPosIds)
            ->andWhere('is_public =?',self::is_public)
            ->orderBy('created_at DESC');
        return $q->execute();
    }

    public function getSomeFollowPosIds($memberId,$num = null) {

        $result = array();
        if($num == null) {
            $q = $this->createQuery()
                ->where('member_id = ?', $memberId)
                ->andWhere('is_public =?',self::is_public)
                ->orderBy('created_at DESC');
        }
        else {
            $q = $this->createQuery()
                ->where('member_id = ?', $memberId)
                ->andWhere('is_public =?',self::is_public)
                ->orderBy('created_at DESC')
                ->limit($num);
        }
        $poss = $q->execute();
        if($poss) {
            foreach ($poss as $pos) {
                $result[] = $pos->getPosId();
            }
        }else
            return null;
        return $result;
    }
   /* Lấy các địa điểm mà member đã follow gần đây nhất, các địa điểm không trùng nhau */
    public function getListFollowOfMember($memberId,$num = null) {
        if($num == null) {
            $q = $this->createQuery()
                ->select('DISTINCT pos_id as pos_id')
                ->where('member_id = ?', $memberId)
                ->andWhere('is_public = ?',self::is_public)
                ->orderBy('created_at DESC');
        }else {
            $q = $this->createQuery()
                ->select('DISTINCT pos_id as pos_id')
                ->where('member_id = ?', $memberId)
                ->andWhere('is_public = ?',self::is_public)
                ->orderBy('created_at DESC')
                ->limit($num);
        }
        return $q->execute();
    }
   /*Lấy địa điểm member follow gần đây nhất */
    public function getNewFollowOfMember($memberId) {
        return $this->createQuery()
        ->where('member_id = ?',$memberId)
        ->orderBy('created_at DESC')
        ->fetchOne();
    }
   /*sql show danh sách địa điểm member follow */
    public function getSqlMemberFollowList($memberId) {
        return $q = $this->createQuery()
        ->where('member_id = ?',$memberId)
        ->andWhere('is_public =?',self::is_public)
        ->orderBy('created_at DESC');
    }
    /* Danh sách những địa điểm có nhiều người follow */
    public function getManyFollowMemberPosList($num) {
        if($num) {
          $q = $this->createQuery('pf')
              ->select('pf.pos_id,count(pf.pos_id) as num_of_member')
              ->innerJoin('pf.PosCategory pc')
              ->where('pf.status =?',self::is_active)
              ->andWhere('pf.is_public =?',self::is_public)
              ->andWhere('pc.type =?',self::is_show)
              ->groupBy('pos_id')
              ->orderBy('num_of_member DESC')
              ->limit($num);
          return $q->execute();
        }
  }
   /* Danh sách nhà cho thuê nhiều người follow */
    public function getManyFollowMemberRentHouseList($num) {
        $posCategory = Doctrine::getTable('PosCategory')->getCategoryFromCode(PluginPosCategoryTable::rent_house_code);
        if($num){
            $q = $this->createQuery('pf')
          ->select('pf.pos_id,count(pf.pos_id) as num_of_member')
          ->where('pf.status =?',self::is_active)
          ->andWhere('pf.is_public =?',self::is_public)
          ->andWhere('pos_category_id =?',$posCategory->getId())
          ->groupBy('pf.pos_id')
          ->orderBy('num_of_member DESC')
          ->limit($num);
          return $q->execute();
        }
    }
    protected  function getPager(Doctrine_Query $q, $page, $size) {
        $pager = new sfDoctrinePager('Pos', $size);
        $pager->setQuery($q);
        $pager->setPage($page);
        $pager->init();
        return $pager;
    }
   /* pager danh sách những địa điểm có nhiều người follow */
    public function getManyFollowMemberPosListPager($page = 1,$size = 30) {
          $q = $this->createQuery('pf')
            ->select('pf.pos_id,count(pf.pos_id) as num_of_member')
            ->innerJoin('pf.PosCategory pc')
            ->where('pf.status =?',self::is_active)
            ->andWhere('pf.is_public =?',self::is_public)
            ->andWhere('pc.type =?',self::is_show)
            ->groupBy('pf.pos_id')
            ->orderBy('num_of_member DESC');
        return $this->getPager($q,$page,$size);
    }
   /* pager danh sách nhà cho thuê nhiều người follow */
    public function getManyFollowMemberRentHouseListPager($page = 1,$size = 30) {
        $posCategory = Doctrine::getTable('PosCategory')->getCategoryFromCode(PluginPosCategoryTable::rent_house_code);
        $q = $this->createQuery('pf')
            ->select('pf.pos_id,count(pf.pos_id) as num_of_member')
            ->where('pf.is_public =?',self::is_public)
            ->andWhere('pf.status =?',self::is_active)
            ->andWhere('pos_category_id =?',$posCategory->getId())
            ->groupBy('pf.pos_id')
            ->orderBy('num_of_member DESC');
        return $this->getPager($q,$page,$size);
    }
    public function getPosManyMemberFollow($page = 1,$size = 30,$position = null) {
          $q = $this->createQuery('pf')
            ->select('pf.pos_id,count(pf.pos_id) as num_of_member')
            ->innerJoin('pf.Pos p')
            ->where('pf.status =?',self::is_active)
            ->andWhere('pf.is_public =?',self::is_public)
            ->andWhere('p.type =?',self::is_show)
            ->andWhere('lat < ?', $position['max_lat'])
            ->andWhere('lat > ?', $position['min_lat'])
            ->andWhere('lng < ?', $position['max_lng'])
            ->andWhere('lng > ?', $position['min_lng'])
            ->groupBy('pf.pos_id')
            ->orderBy('num_of_member DESC');
         if($q->count()){
            return $this->getPager($q,$page,$size);
         }else{
              $position = opToolkit::expansionAreaSearch($position, self::r);
              $q = $this->createQuery('pf')
                ->select('pf.pos_id,count(pf.pos_id) as num_of_member')
                ->innerJoin('pf.Pos p')
                ->where('pf.status =?',self::is_active)
                ->andWhere('pf.is_public =?',self::is_public)
                ->andWhere('p.type =?',self::is_show)
                ->andWhere('lat < ?', $position['max_lat'])
                ->andWhere('lat > ?', $position['min_lat'])
                ->andWhere('lng < ?', $position['max_lng'])
                ->andWhere('lng > ?', $position['min_lng'])
                ->groupBy('pf.pos_id')
                ->orderBy('num_of_member DESC');
             if($q->count()){
                return $this->getPager($q,$page,$size);
             }else{
                return $this->getManyFollowMemberPosListPager($page,$size);
             }
         }
    }
}
