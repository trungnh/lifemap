<?php

/**
 * PluginPosEventCheckinTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosEventCheckinTable extends Doctrine_Table {

    const checkinAgainTime = '+1 day';
    const is_public = 1;
    const is_private = 0;
    const online = 1;
    const is_show = 1;
    const checking = 1; /* �ang check-in t?i d?a di?m */
    const checked = 0; /* �� check-in t?i d?a di?m */
    const r = 17; /* B�n k�nh 17 km */
    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosEventCheckinTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginPosEventCheckin');
    }

    public function getCheckinNumber($id) {
        $q = $this->createQuery('pc')
                ->where('pc.pos_event_id = ?', $id);
        return count($q);
    }
    /* huent
     * get check-in of member
     */
    public function getStatusCheckinEventMember($memberId,$eventId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->andWhere('pos_event_id =?',$eventId);
        return $q->fetchOne();
    }
    /* save member check-in event */
    public function save($memberId,$eventId,$is_public = 1,$status = 1){
        $checkin = new PosEventCheckin();
        $checkin->member_id = $memberId;
        $checkin->pos_event_id = $eventId;
        $checkin->is_public = $is_public;
        $checkin->status = $status;
        $checkin->save();
        return $checkin;
    }
    public function getListMemberCheckinEvent($event_id){
        $q = $this->createQuery()
          ->where('pos_event_id =?',$event_id)
          ->andWhere('is_public =?',self::is_public)
          ->orderBy('created_at DESC');
        return $q->execute();

    }


    public function checkinMemberCount($eventId) {
        $q = $this->createQuery()
                ->where('pos_event_id = ?', $posId);
        return $q->count();
    }

    public function getCheckInStatus($eventId, $memberId) {
        $q = $this->createQuery()
                ->where('pos_event_id = ?', $eventId)
                ->andWhere('member_id = ?', $memberId)
                ->andWhere('is_public =?', self::is_public)
                ->orderBy('created_at DESC');
        $user = $q->fetchOne();
        if (count($user) > 0)
            return $user;
        else
            return null;
    }
    
    public function getCheckinNumByEventId($id) {
        $q = $this->createQuery()
                ->where('pos_event_id=?', $id);
        return count($q);
    }

}