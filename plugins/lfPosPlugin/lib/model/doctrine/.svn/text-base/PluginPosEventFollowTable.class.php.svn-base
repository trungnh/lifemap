<?php

/**
 * PluginPosEventFollowTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosEventFollowTable extends Doctrine_Table {

    const is_public = 1;
    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosEventFollowTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginPosEventFollow');
    }

    public function getFollowNumber($id) {
        $q = $this->createQuery('pf')
                ->where('pf.pos_event_id = ?', $id)
                ->andWhere('is_public =?',self::is_public);
        return count($q);
    }
    /* huent
     * get all member follow event
     */
    public function getAllMemberFollowEvent($eventId){
        $q = $this->createQuery()
            ->where('pos_event_id =?',$eventId);
        return $q->execute();
    }
    /* huent
     * get follow of member
     */
    public function getStatusFollowEventMember($memberId,$eventId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->andWhere('pos_event_id =?',$eventId);
        return $q->fetchOne();
    }
    /* Save follow */
    public function save($memberId,$eventId,$is_public = 1,$status = 1){
        $follow = new PosEventFollow();
        $follow->member_id = $memberId;
        $follow->pos_event_id = $eventId;
        $follow->is_public = $is_public;
        $follow->status = $status;
        $follow->save();
        return $follow;
    }
    /* list member follow event */
    public function getListMemberFollowEvent($event_id){
        $q = $this->createQuery()
          ->where('pos_event_id =?',$event_id)
          ->andWhere('is_public =?',self::is_public)
          ->orderBy('created_at DESC');
        return $q->execute();

    }
    
    public function followMemberCount($eventId) {
        $q = $this->createQuery()
            ->where('pos_event_id = ?', $eventId);
        return $q->count();
    }
    
    public function getFollowStatus($eventId,$memberId) {
        $q = $this->createQuery()
            ->where('pos_event_id = ?',$eventId)
            ->andWhere('member_id = ?',$memberId)
            ->andWhere('is_public =?',self::is_public);
        $user = $q->fetchOne();
        if(count($user)>0)
            return $user;
        else
            return null;
    }
    
    public function getFollowNumByEventId($id) {
        $q = $this->createQuery()
                ->where('pos_event_id=?', $id);
        return count($q);
    }
}