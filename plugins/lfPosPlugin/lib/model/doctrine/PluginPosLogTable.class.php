<?php

/**
 * PluginPosLogTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPosLogTable extends Doctrine_Table
{
     const is_public = 1;
     const action_comment = 'action_comment';
     const action_checkin = 'action_checkin';
     const action_follow = 'action_follow';
     const action_post_pos = 'action_post_pos';
     const action_post_house = 'action_post_house';
     const action_post_photo_pos = 'action_post_photo_pos';
     const action_event_comment = 'action_event_comment';
     const action_event_follow = 'action_event_follow';
     const action_event_checkin = 'action_event_checkin';
     const show_comment_number = 20;
     const show_action_number = 5;
     
    /**
     * Returns an instance of this class.
     *
     * @return object PluginPosLogTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PluginPosLog');
    }
    /* Save log */
    public function savePosLog($memberId,$objectId,$actionName,$isPublic,$posId = null){
        $posLog = new PosLog();
        $posLog->member_id = $memberId;
        $posLog->pos_id = $posId;
        $posLog->object_id = $objectId;
        $posLog->action_name = $actionName;
        $posLog->is_public = $isPublic;
        $posLog->save();
    }
    /* danh sách các tác động của member */
    public function getListActionMember($memberId){
         return $q = $this->createQuery()
          ->where('member_id = ?',$memberId)
          ->andWhere('is_public =?',self::is_public)
          ->orderBy('created_at DESC');
    }
    /* danh sách các tác động của member và bạn bè của member */
    public function getRelationActionMemberList($memberId){
        $friendMemberIds = Doctrine::getTable('MemberRelationship')->getFriendMemberIds($memberId);
        $friendMemberIds[] = $memberId;
        return $q = $this->createQuery()
          ->whereIn('member_id',$friendMemberIds)
          ->andWhere('is_public =?',self::is_public)
          ->orderBy('created_at DESC');
    }
    /* Danh sách thành viên tích cực */
     public function getMemberPositiveList($num) {
        if($num)
            return $this->createQuery()
                ->select('member_id, count(member_id)')
                ->where('is_public =?',self::is_public)
                ->groupBy('member_id')
                ->orderBy('count(member_id) DESC')
                ->limit($num)
                ->execute();
    }
    /* Pager danh sách thành viên tích cực */
     public function getMemberPositiveListPager($pager = 1,$size = 10) {
            $q = $this->createQuery()
                ->select('member_id, count(member_id)')
                ->where('is_public =?',self::is_public)
                ->groupBy('member_id')
                ->orderBy('count(member_id) DESC');
            return $this->getPager($q,$pager,$size);
     }
     /* pager*/
    protected function getPager(Doctrine_Query $q, $page, $size)
    {
      $pager = new sfDoctrinePager('PosLog', $size);
      $pager->setQuery($q);
      $pager->setPage($page);
      $pager->init();
      return $pager;
    }
    /* Danh sách các hoạt động ứng với một member */
     public function getActionNameOfMemberList($memberId) {
        if($memberId)
            return $this->createQuery()
                ->select('action_name, count(action_name) as num_of_action')
                ->where('is_public =?',self::is_public)
                ->andWhere('member_id =?',$memberId)
                ->groupBy('action_name')
                ->execute();
        else
            return null;
               
    }
    public function getActionName($memberId){
        $listAction = $this->getActionNameOfMemberList($memberId);
        if($listAction){
          $array = array();
          foreach($listAction as $action){
            if($action->getActionName() == PluginPosTable::action_checkin){
                $array[] = array('name'=>'check-in','num'=>$action->getNumOfAction());
                continue;
            }
            if($action->getActionName() == PluginPosTable::action_follow){
                $array[] = array('name'=>' theo dõi','num'=>$action->getNumOfAction());
                continue;
            }
            if($action->getActionName() == PluginPosTable::action_comment){
                $array[] = array('name'=>' cảm nhận','num'=>$action->getNumOfAction());
                continue;
            }
            if($action->getActionName() == PluginPosTable::action_post_pos){
                $array[] = array('name'=>' địa điểm','num'=>$action->getNumOfAction());
                continue;
            }
            if($action->getActionName() == PluginPosTable::action_post_house){
                $array[] = array('name'=>' nhà cho thuê','num'=>$action->getNumOfAction());
                continue;
            }
          }
          return $array;
        }else
          return null;

    }
    /* huent
     * Đếm số lần member check-in
     */
    public function getNumberOfMemberCheckin($memberId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->andWhere('is_public =?',self::is_public)
          ->andWhere('action_name =?',self::action_checkin)
          ->orWhere('action_name =?',self::action_event_checkin);
        return $q->count();
    }
    /* Đếm số lần member follow */
    public function getNumberOfMemberFollow($memberId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->andWhere('is_public =?',self::is_public)
          ->andWhere('action_name =?',self::action_follow)
          ->orWhere('action_name =?',self::action_event_follow);
        return $q->count();
    }
    /* Đếm số lần member comment */
    public function getNumberOfMemberComment($memberId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->andWhere('action_name =?',self::action_comment)
          ->orWhere('action_name =?',self::action_event_comment);
        return $q->count();
    }
    /* Danh sách comment của member */
    public function getListCommentLog($memberId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->andWhere('action_name =?',self::action_comment)
          ->orWhere('action_name =?',self::action_event_comment)
          ->orderBy('created_at DESC')
          ->limit(self::show_comment_number);
        return $q->execute();
    }
    public function getListMemberAction($memberId){
        $q = $this->createQuery()
          ->where('member_id =?',$memberId)
          ->orderBy('created_at DESC')
          ->limit(self::show_action_number);
        return $q->execute();
    }
}