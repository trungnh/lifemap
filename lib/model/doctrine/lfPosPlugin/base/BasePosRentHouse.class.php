<?php

/**
 * BasePosRentHouse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $pos_id
 * @property string $price
 * @property string $unit_price
 * @property int $const_price_ranges
 * @property integer $status
 * @property string $area
 * @property string $unit_area
 * @property integer $num_room
 * @property string $direction
 * @property string $contact_name
 * @property string $contact_email
 * @property string $contact_tel
 * @property Pos $Pos
 * 
 * @method integer      getId()                 Returns the current record's "id" value
 * @method integer      getPosId()              Returns the current record's "pos_id" value
 * @method string       getPrice()              Returns the current record's "price" value
 * @method string       getUnitPrice()          Returns the current record's "unit_price" value
 * @method int          getConstPriceRanges()   Returns the current record's "const_price_ranges" value
 * @method integer      getStatus()             Returns the current record's "status" value
 * @method string       getArea()               Returns the current record's "area" value
 * @method string       getUnitArea()           Returns the current record's "unit_area" value
 * @method integer      getNumRoom()            Returns the current record's "num_room" value
 * @method string       getDirection()          Returns the current record's "direction" value
 * @method string       getContactName()        Returns the current record's "contact_name" value
 * @method string       getContactEmail()       Returns the current record's "contact_email" value
 * @method string       getContactTel()         Returns the current record's "contact_tel" value
 * @method Pos          getPos()                Returns the current record's "Pos" value
 * @method PosRentHouse setId()                 Sets the current record's "id" value
 * @method PosRentHouse setPosId()              Sets the current record's "pos_id" value
 * @method PosRentHouse setPrice()              Sets the current record's "price" value
 * @method PosRentHouse setUnitPrice()          Sets the current record's "unit_price" value
 * @method PosRentHouse setConstPriceRanges()   Sets the current record's "const_price_ranges" value
 * @method PosRentHouse setStatus()             Sets the current record's "status" value
 * @method PosRentHouse setArea()               Sets the current record's "area" value
 * @method PosRentHouse setUnitArea()           Sets the current record's "unit_area" value
 * @method PosRentHouse setNumRoom()            Sets the current record's "num_room" value
 * @method PosRentHouse setDirection()          Sets the current record's "direction" value
 * @method PosRentHouse setContactName()        Sets the current record's "contact_name" value
 * @method PosRentHouse setContactEmail()       Sets the current record's "contact_email" value
 * @method PosRentHouse setContactTel()         Sets the current record's "contact_tel" value
 * @method PosRentHouse setPos()                Sets the current record's "Pos" value
 * 
 * @package    OpenPNE
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePosRentHouse extends opDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pos_rent_house');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'comment' => 'id identifies posCategoryAtribute',
             'length' => 4,
             ));
        $this->hasColumn('pos_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => ' ',
             'length' => 4,
             ));
        $this->hasColumn('price', 'string', 50, array(
             'type' => 'string',
             'comment' => 'Giá cho thuê nhà',
             'length' => 50,
             ));
        $this->hasColumn('unit_price', 'string', 100, array(
             'type' => 'string',
             'comment' => 'đơn vị giá',
             'length' => 100,
             ));
        $this->hasColumn('const_price_ranges', 'int', 1, array(
             'type' => 'int',
             'comment' => 'Khoảng giá trị của giá nhà cho thuê ',
             'length' => 1,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'comment' => 'Trạng thái còn\\ hết phòng',
             'length' => 1,
             ));
        $this->hasColumn('area', 'string', 50, array(
             'type' => 'string',
             'comment' => 'diện tích phòng ',
             'length' => 50,
             ));
        $this->hasColumn('unit_area', 'string', 100, array(
             'type' => 'string',
             'comment' => 'đơn vị diện tích',
             'length' => 100,
             ));
        $this->hasColumn('num_room', 'integer', 1, array(
             'type' => 'integer',
             'comment' => 'Số phòng ',
             'length' => 1,
             ));
        $this->hasColumn('direction', 'string', 100, array(
             'type' => 'string',
             'comment' => 'hướng nhà ',
             'length' => 100,
             ));
        $this->hasColumn('contact_name', 'string', 50, array(
             'type' => 'string',
             'comment' => 'Tên người liên hệ',
             'length' => 50,
             ));
        $this->hasColumn('contact_email', 'string', 50, array(
             'type' => 'string',
             'comment' => 'Email liên hệ',
             'length' => 50,
             ));
        $this->hasColumn('contact_tel', 'string', 20, array(
             'type' => 'string',
             'comment' => 'Điện thoại liên hệ',
             'length' => 20,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('comment', '');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pos', array(
             'local' => 'pos_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}